Ruby — интерпретируемый (скриптовый) язык программирования общего назначения, а также DSL для Rails.
Краткая история.
Некий расовый японский программист Юкихиро Мацумото aka Matz, несмотря на более чем десятилетний опыт разработки, так и не смог осилить ни один из скриптовых языков и, сославшись на их ущербность, создал свой собственный язык, состоящий почти полностью из ништяков, сворованных из других популярных языков, чего и не скрывает.
При этом на данный момент языку уже 20 лет, а известен он стал буквально последние несколько лет, и то благодаря написанному на нем фреймворку Rails и наконец-то доведенной до ума документации.
Плюсы и минусы.
За что любят:
-ООП, а ООП это круто
-Активное комьюнити
-Няшный синтаксис
-Высокая зарплата
-Поддержка кучи модных фич
-Поднимает ЧСВ пишущих на нем
За что ненавидят:
-Плохо работает на венде
-Отсутствие реальной многопоточности
-Очень мало вакансий 
-Родной интерпретатор MRI достаточно медленный, и умеет использовать только одно ядро процессора
-Жрет памяти, как не в себя
-Нету нормальных доков на русском
-Высокий порог входа
-Минималистичная стандартная библиотека, из-за чего на любой чих приходится доставлять сторонние либы, каждая из которых, в свою очередь, зависит еще от десятка-двух, что приводит к настоящему аду зависимостей в проекте
-Стандартная библиотека, а вслед за ней и все остальные жутко любят менять API, что ломает не только обратную, но и прямую совместимость, причем в минорных версиях — проект, написанный на 2.1.5, вполне может не запуститься на 2.2.0
-Одиночное наследование без абстрактных классов и интерфейсов порою может вылезти боком
За что все такие ценят Ruby.
Руби ценится в первую очередь за скорость разработки, синтаксис, ориентированный на рутину, кучу готовых решений, а так же уникальное сочетание поддержки всякой функциональной модноты и традиционного императивного подхода.
Встроенная в язык поддержка профайлеров и тестов заставляет здорово оргазмировать тех, кто знает, что это такое, и просто повышает ЧСВ у остальных.
При этом степень задротства регулируется в зависимости от задач, а наличие хорошей документации на английском, а иногда и на русском, снижает порог входа до минимума.
